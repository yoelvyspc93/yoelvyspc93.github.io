name: Deploy Next.js site to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    env:
      # === Map environment/repo variables explicitly ===
      NEXT_PUBLIC_FEATURE_LANGUAGE: ${{ vars.NEXT_PUBLIC_FEATURE_LANGUAGE }}
      NEXT_PUBLIC_FEATURE_HEADER: ${{ vars.NEXT_PUBLIC_FEATURE_HEADER }}
      NEXT_PUBLIC_FEATURE_ABOUT: ${{ vars.NEXT_PUBLIC_FEATURE_ABOUT }}
      NEXT_PUBLIC_FEATURE_PROJECTS: ${{ vars.NEXT_PUBLIC_FEATURE_PROJECTS }}
      NEXT_PUBLIC_FEATURE_EXPERIENCE: ${{ vars.NEXT_PUBLIC_FEATURE_EXPERIENCE }}
      NEXT_PUBLIC_FEATURE_SKILLS: ${{ vars.NEXT_PUBLIC_FEATURE_SKILLS }}
      NEXT_PUBLIC_FEATURE_CONTACT: ${{ vars.NEXT_PUBLIC_FEATURE_CONTACT }}
      TOKEN: ${{ secrets.TOKEN }}
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Debug NEXT_PUBLIC_* variables
        run: |
          echo "=== NEXT_PUBLIC_* available at build ==="
          printenv | sort | grep '^NEXT_PUBLIC_' || echo "❌ None found"

      - name: Write .env.production file
        run: |
          : > .env.production
          printenv | grep '^NEXT_PUBLIC_' >> .env.production || true
          echo "✅ .env.production created"

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Ensure ./out directory exists
        run: |
          test -d ./out || (echo "❌ ./out missing. Check next.config.mjs (output: 'export')." && exit 1)

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
